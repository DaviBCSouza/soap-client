
package br.cidade.soap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CidadeService", targetNamespace = "http://soap/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CidadeService {


    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "insertCidade", targetNamespace = "http://soap/", className = "br.cidade.soap.InsertCidade")
    @ResponseWrapper(localName = "insertCidadeResponse", targetNamespace = "http://soap/", className = "br.cidade.soap.InsertCidadeResponse")
    @Action(input = "http://soap/CidadeService/insertCidadeRequest", output = "http://soap/CidadeService/insertCidadeResponse")
    public void insertCidade(
        @WebParam(name = "arg0", targetNamespace = "")
        Cidade arg0);

    /**
     * 
     * @return
     *     returns java.util.List<br.cidade.soap.Cidade>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCidades", targetNamespace = "http://soap/", className = "br.cidade.soap.GetCidades")
    @ResponseWrapper(localName = "getCidadesResponse", targetNamespace = "http://soap/", className = "br.cidade.soap.GetCidadesResponse")
    @Action(input = "http://soap/CidadeService/getCidadesRequest", output = "http://soap/CidadeService/getCidadesResponse")
    public List<Cidade> getCidades();

    /**
     * 
     * @param arg0
     * @return
     *     returns br.cidade.soap.Cidade
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCidade", targetNamespace = "http://soap/", className = "br.cidade.soap.GetCidade")
    @ResponseWrapper(localName = "getCidadeResponse", targetNamespace = "http://soap/", className = "br.cidade.soap.GetCidadeResponse")
    @Action(input = "http://soap/CidadeService/getCidadeRequest", output = "http://soap/CidadeService/getCidadeResponse")
    public Cidade getCidade(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteCidade", targetNamespace = "http://soap/", className = "br.cidade.soap.DeleteCidade")
    @ResponseWrapper(localName = "deleteCidadeResponse", targetNamespace = "http://soap/", className = "br.cidade.soap.DeleteCidadeResponse")
    @Action(input = "http://soap/CidadeService/deleteCidadeRequest", output = "http://soap/CidadeService/deleteCidadeResponse")
    public void deleteCidade(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "updateCidade", targetNamespace = "http://soap/", className = "br.cidade.soap.UpdateCidade")
    @ResponseWrapper(localName = "updateCidadeResponse", targetNamespace = "http://soap/", className = "br.cidade.soap.UpdateCidadeResponse")
    @Action(input = "http://soap/CidadeService/updateCidadeRequest", output = "http://soap/CidadeService/updateCidadeResponse")
    public void updateCidade(
        @WebParam(name = "arg0", targetNamespace = "")
        Cidade arg0);

}
