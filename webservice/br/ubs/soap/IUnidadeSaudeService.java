
package br.ubs.soap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IUnidadeSaudeService", targetNamespace = "http://soap.ubs.br/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IUnidadeSaudeService {


    /**
     * 
     * @return
     *     returns java.util.List<br.ubs.soap.UnidadeSaude>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAll", targetNamespace = "http://soap.ubs.br/", className = "br.ubs.soap.GetAll")
    @ResponseWrapper(localName = "getAllResponse", targetNamespace = "http://soap.ubs.br/", className = "br.ubs.soap.GetAllResponse")
    @Action(input = "http://soap.ubs.br/IUnidadeSaudeService/getAllRequest", output = "http://soap.ubs.br/IUnidadeSaudeService/getAllResponse")
    public List<UnidadeSaude> getAll();

    /**
     * 
     * @param arg0
     * @return
     *     returns br.ubs.soap.UnidadeSaude
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getByCNES", targetNamespace = "http://soap.ubs.br/", className = "br.ubs.soap.GetByCNES")
    @ResponseWrapper(localName = "getByCNESResponse", targetNamespace = "http://soap.ubs.br/", className = "br.ubs.soap.GetByCNESResponse")
    @Action(input = "http://soap.ubs.br/IUnidadeSaudeService/getByCNESRequest", output = "http://soap.ubs.br/IUnidadeSaudeService/getByCNESResponse")
    public UnidadeSaude getByCNES(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "update", targetNamespace = "http://soap.ubs.br/", className = "br.ubs.soap.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://soap.ubs.br/", className = "br.ubs.soap.UpdateResponse")
    @Action(input = "http://soap.ubs.br/IUnidadeSaudeService/updateRequest", output = "http://soap.ubs.br/IUnidadeSaudeService/updateResponse")
    public boolean update(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "delete", targetNamespace = "http://soap.ubs.br/", className = "br.ubs.soap.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://soap.ubs.br/", className = "br.ubs.soap.DeleteResponse")
    @Action(input = "http://soap.ubs.br/IUnidadeSaudeService/deleteRequest", output = "http://soap.ubs.br/IUnidadeSaudeService/deleteResponse")
    public void delete(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "save", targetNamespace = "http://soap.ubs.br/", className = "br.ubs.soap.Save")
    @ResponseWrapper(localName = "saveResponse", targetNamespace = "http://soap.ubs.br/", className = "br.ubs.soap.SaveResponse")
    @Action(input = "http://soap.ubs.br/IUnidadeSaudeService/saveRequest", output = "http://soap.ubs.br/IUnidadeSaudeService/saveResponse")
    public boolean save(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

}
